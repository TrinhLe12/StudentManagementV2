@using StudentManagementV2.Api.ViewModels
@model SubjectRegisterViewModel

@{
    ViewBag.Title = "UpdateSubjectRegister";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h1>Update Subject Register</h1>

<form class="d-flex flex-column" method="post" action="SaveUpdateSubjectRegister">

    <div class="form-group">
        <div class="form-group">
            @Html.LabelFor(sr => sr.StudentId, "Student ID")
            @Html.TextBoxFor(sr => sr.StudentId, new { @class="form-control", @readonly="readonly", @value=@Model.StudentId })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(sr => sr.SubjectId, "Subject")
        @Html.TextBoxFor(sr => sr.SubjectId, new { @class="form-control", @readonly="readonly", @value=@Model.SubjectId })
    </div>
    
    <div class="form-group">
        @Html.LabelFor(sr => sr.SemesterId, "Semester")
        @Html.TextBoxFor(sr => sr.SemesterId, new { @class="form-control", @readonly="readonly", @value=@Model.SemesterId })
    </div>

    <div class="form-group">
        @Html.LabelFor(sr => sr.Year)
        @Html.TextBoxFor(sr => sr.Year, new { @type="number", @class="form-control", @value=@Model.Year, @readonly="readonly" })
    </div>

    <div class="form-group">
        @Html.LabelFor(sr => sr.Score1)
        @Html.TextBoxFor(sr => sr.Score1, "{0:0.00}", new { @class="form-control", @placeholder="Score 1", @value=@Model.Score1 })
        @Html.ValidationMessageFor(sr => sr.Score1, null, new { @class = "text-danger" })
    </div>

    <div class="form-group">
        @Html.LabelFor(sr => sr.Score2)
        @Html.TextBoxFor(sr => sr.Score2, new { @class="form-control", @placeholder="Score 2", @value=@Model.Score2 })
        @Html.ValidationMessageFor(sr => sr.Score2, null, new { @class = "text-danger" })
    </div>

    <div class="d-flex justify-content-end">
        <button type="submit">Save</button>
    </div>
    
</form>
